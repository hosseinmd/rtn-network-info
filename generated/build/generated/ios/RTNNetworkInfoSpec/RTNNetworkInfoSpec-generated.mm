/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RTNNetworkInfoSpec.h"


namespace facebook {
  namespace react {
    
    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncSSID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncSSID", @selector(getSyncSSID), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncBSSID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncBSSID", @selector(getSyncBSSID), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncBroadcast(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncBroadcast", @selector(getSyncBroadcast), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncIPAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncIPAddress", @selector(getSyncIPAddress), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncIPV4Address(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncIPV4Address", @selector(getSyncIPV4Address), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncWIFIIPV4Address(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncWIFIIPV4Address", @selector(getSyncWIFIIPV4Address), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncSubnet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncSubnet", @selector(getSyncSubnet), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSyncGatewayIPAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, StringKind, "getSyncGatewayIPAddress", @selector(getSyncGatewayIPAddress), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSSID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getSSID", @selector(getSSID:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getBSSID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getBSSID", @selector(getBSSID:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getBroadcast(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getBroadcast", @selector(getBroadcast:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getIPAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getIPAddress", @selector(getIPAddress:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getIPV4Address(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getIPV4Address", @selector(getIPV4Address:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getWIFIIPV4Address(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getWIFIIPV4Address", @selector(getWIFIIPV4Address:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getSubnet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getSubnet", @selector(getSubnet:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getGatewayIPAddress(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getGatewayIPAddress", @selector(getGatewayIPAddress:reject:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkInfoSpecJSI_getFrequency(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, PromiseKind, "getFrequency", @selector(getFrequency:reject:), args, count);
    }

    NativeNetworkInfoSpecJSI::NativeNetworkInfoSpecJSI(const ObjCTurboModule::InitParams &params)
      : ObjCTurboModule(params) {
        
        methodMap_["getSyncSSID"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncSSID};
        
        
        methodMap_["getSyncBSSID"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncBSSID};
        
        
        methodMap_["getSyncBroadcast"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncBroadcast};
        
        
        methodMap_["getSyncIPAddress"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncIPAddress};
        
        
        methodMap_["getSyncIPV4Address"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncIPV4Address};
        
        
        methodMap_["getSyncWIFIIPV4Address"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncWIFIIPV4Address};
        
        
        methodMap_["getSyncSubnet"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncSubnet};
        
        
        methodMap_["getSyncGatewayIPAddress"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSyncGatewayIPAddress};
        
        
        methodMap_["getSSID"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSSID};
        
        
        methodMap_["getBSSID"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getBSSID};
        
        
        methodMap_["getBroadcast"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getBroadcast};
        
        
        methodMap_["getIPAddress"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getIPAddress};
        
        
        methodMap_["getIPV4Address"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getIPV4Address};
        
        
        methodMap_["getWIFIIPV4Address"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getWIFIIPV4Address};
        
        
        methodMap_["getSubnet"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getSubnet};
        
        
        methodMap_["getGatewayIPAddress"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getGatewayIPAddress};
        
        
        methodMap_["getFrequency"] = MethodMetadata {0, __hostFunction_NativeNetworkInfoSpecJSI_getFrequency};
        
    }
  } // namespace react
} // namespace facebook
